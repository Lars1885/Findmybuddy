// Simple i18n: DA/EN/DE oversat; 24 EU-sprog whitelisted med fallback til EN
(function(){
  const M = {
    en: {
      app_name: "Find My Buddy",
      join_or_create: "Join / Create",
      save: "Save",
      pointing_at: "Pointing at:",
      distance: "Distance:",
      save_camp: "Save/Update Camp",
      walk_home: "Walk home together",
      take_photo: "Take photo",
      group_gallery: "Group gallery",
      chat: "Chat",
      send: "Send",
      you: "You",
      no_one: "(no one yet)"
    },
    da: {
      app_name: "Find My Buddy",
      join_or_create: "Join / Opret",
      save: "Gem",
      pointing_at: "Pejler mod:",
      distance: "Afstand:",
      save_camp: "Gem/Opdatér Camp",
      walk_home: "Gå hjem sammen",
      take_photo: "Tag billede",
      group_gallery: "Gruppens galleri",
      chat: "Chat",
      send: "Send",
      you: "Dig",
      no_one: "(ingen andre endnu)"
    },
    de: {
      app_name: "Find My Buddy",
      join_or_create: "Beitreten / Erstellen",
      save: "Speichern",
      pointing_at: "Zeigt auf:",
      distance: "Entfernung:",
      save_camp: "Camp speichern/aktualisieren",
      walk_home: "Zusammen nach Hause",
      take_photo: "Foto aufnehmen",
      group_gallery: "Gruppengalerie",
      chat: "Chat",
      send: "Senden",
      you: "Du",
      no_one: "(noch niemand)"
    }
  };

  // 24 EU-sprog whitelist (for auto-match); de fleste falder foreløbigt tilbage til EN
  const EU24 = ["bg","hr","cs","da","nl","en","et","fi","fr","de","el","hu","ga","it","lv","lt","mt","pl","pt","ro","sk","sl","es","sv"];

  function pickLang(){
    const nav = (navigator.languages && navigator.languages[0]) || navigator.language || "en";
    const base = nav.split("-")[0].toLowerCase();
    if (M[base]) return base;
    if (EU24.includes(base)) return "en"; // fallback for EU-sprog vi ikke har oversat endnu
    return "en";
  }

  function applyI18n(lang){
    const dict = M[lang] || M.en;
    document.querySelectorAll("[data-i18n]").forEach(el=>{
      const key = el.getAttribute("data-i18n");
      if (dict[key]) el.textContent = dict[key];
    });
    // placeholders
    const placeholders = {
      groupIdInput: { da:"Gruppe-ID", en:"Group ID", de:"Gruppen-ID" },
      displayNameInput: { da:"Dit navn", en:"Your name", de:"Dein Name" },
      sheetChatInput: { da:"Skriv en besked…", en:"Write a message…", de:"Nachricht schreiben…" }
    };
    Object.entries(placeholders).forEach(([id,vals])=>{
      const el = document.getElementById(id);
      if (el) el.placeholder = vals[lang] || vals.en;
    });
  }

  const lang = pickLang();
  window.__i18n = { lang, M, applyI18n };
  document.addEventListener("DOMContentLoaded", ()=> applyI18n(lang));
})();
